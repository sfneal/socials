{
    "name": "sfneal/socials",
    "description": "Eloquent Model and extensions for Social media accounts",
    "keywords": [
        "sfneal",
        "socials"
    ],
    "homepage": "https://github.com/sfneal/socials",
    "license": "MIT",
    "type": "library",
    "authors": [
        {
            "name": "Stephen Neal",
            "email": "stephen.neal14@gmail.com",
            "role": "Developer"
        }
    ],
    "require": {
        "php": "^8.0|^8.1",
        "sfneal/models": "^2.8|^3.0"
    },
    "require-dev": {
        "orchestra/testbench": "^7.40|^8.0|9.0",
        "phpunit/phpunit": "^9.6|^10.0|^11.0",
        "scrutinizer/ocular": "^1.8",
        "sfneal/mock-models": "^0.9.4 || ^0.11.0"
    },
    "extra": {
        "laravel": {
            "providers": [
                "Sfneal\\Socials\\Providers\\SocialsServiceProvider"
            ]
        }
    },
    "autoload": {
        "psr-4": {
            "Sfneal\\Socials\\": "src",
            "Database\\Factories\\": "database/factories/"
        }
    },
    "autoload-dev": {
        "psr-4": {
            "Sfneal\\Socials\\Tests\\": "tests",
            "Database\\Seeders\\": "tests/Database/Seeders/"
        }
    },
    "scripts": {
        "test": "vendor/bin/phpunit",
        "test-both": [
            "composer test",
            "composer docker-test"
        ],
        "test-lowest" : [
            "composer update --prefer-lowest",
            "composer test"
        ],
        "test-all": [
            "composer update-test",
            "composer docker-test-all"
        ],
        "test-coverage": "vendor/bin/phpunit --coverage-html coverage",
        "upload-coverage": "php vendor/bin/ocular code-coverage:upload --format=php-clover phpunit.xml.dist",
        "docker-build": "bash scripts/build.sh ''",
        "docker-build-lowest": "bash scripts/build.sh --prefer-lowest",
        "docker-test": "bash scripts/boot.sh ''",
        "docker-test-lowest": "bash scripts/boot.sh --prefer-lowest",
        "docker-test-build": "composer docker-build",
        "docker-test-lowest-build": "composer docker-build-lowest",
        "docker-test-all": [
            "bash scripts/boot-all.sh --prefer-lowest",
            "bash scripts/boot-all.sh"
        ],
        "docker-test-both" : [
            "composer docker-test-lowest",
            "composer docker-test"
        ],
        "down": "bash scripts/down.sh",
        "update-test": [
            "composer --prefer-stable update",
            "composer test",
            "composer update --prefer-lowest",
            "composer test",
            "composer update"
        ]
    },
    "config": {
        "sort-packages": true
    }
}
